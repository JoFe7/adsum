# -*- coding: utf-8 -*-
"""
Created on Thu May  5 16:01:39 2022

@author: Jonathan
"""
from sklearn.model_selection import train_test_split  
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.preprocessing import OneHotEncoder
from sklearn.ensemble import RandomForestClassifier

df = pd.read_csv('dataset.csv')

def ohe_conversion(df):
    ohe=pd.DataFrame()
    ohe["Disease"]=list(df["Disease"].values)
    for index,df_row in df.iterrows():
        for symptom_number in range(1,18):
            symptom_treat="Symptom_"+str(symptom_number)
            if not pd.isnull(df_row[symptom_treat]):
                ohe.at[index,df_row[symptom_treat]]=int(1)
    return ohe.fillna(int(0))


df = ohe_conversion(df)
x = df.drop('Disease',axis=1).values
y = df['Disease'].values
newframe = df.copy()


X_train, X_test, y_train, y_test = train_test_split(x, y, train_size=0.5, random_state=42)
X_train.shape, X_test.shape



classifier_rf = RandomForestClassifier(random_state=42, n_jobs=-1, max_depth=10,
                                       n_estimators=100, oob_score=True)


classifier_rf.fit(X_train, y_train)
u1 = classifier_rf.oob_score_
print(u1)

scaler = StandardScaler()

scaler.fit(x)

x=scaler.transform(x)

mypca = PCA(n_components=1) # On param√®tre ici pour ne garder que 3 composantes

mypca.fit(x)

classifier_rf = RandomForestClassifier(random_state=42, n_jobs=-1, max_depth=10,
                                       n_estimators=100, oob_score=True)


classifier_rf.fit(X_train, y_train)
u2 = classifier_rf.oob_score_
print(u2)
